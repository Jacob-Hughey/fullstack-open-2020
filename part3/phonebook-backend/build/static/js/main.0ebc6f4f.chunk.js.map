{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","Error","Delete","name","onClick","window","confirm","personService","Filter","onChange","PersonForm","props","onSubmit","value","newName","onNameChange","newNumber","onNumberChange","type","Number","number","App","useState","persons","setPersons","setNewName","setNewNumber","filteredPersons","setFilteredPersons","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","useEffect","initialPersons","event","filter","el","toLowerCase","indexOf","target","preventDefault","some","e","person","find","p","changedPerson","returnedPerson","map","setTimeout","catch","error","changeNumber","personObject","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ebc6f4f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/people'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    axios.delete(`${baseUrl}/${id.id}`)\n}\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nconst Error = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nconst Delete = ({ name, id }) => {\n    const response = () => {\n        if (window.confirm(`Delete ${name}?`)) {\n            personService.remove({id})\n        }\n    }\n\n    return (\n        <button onClick={response}>delete</button>\n    )\n}\n\nconst Filter = ({ onChange }) => {\n    return (\n        <div>\n            filter shown with <input onChange={onChange} />\n        </div>\n    )\n}\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.onSubmit}>\n            <div>\n                name: <input value={props.newName} onChange={props.onNameChange} />\n            </div>\n            <div>\n                number: <input value={props.newNumber} onChange={props.onNumberChange} />\n            </div>\n            <div>\n                <button type='submit'>add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Number = (props) => {\n    return (\n        <li>\n            {props.name} \n            {props.number}\n            <Delete name={props.name} id={props.id} /> \n        </li>\n    )\n}\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filteredPersons, setFilteredPersons ] = useState(persons)\n    const [ notificationMessage, setNotificationMessage ] = useState(null)\n    const [ errorMessage, setErrorMessage ] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n                setFilteredPersons(initialPersons)\n            })\n    }, [])\n\n    const changeNumber = (id) => {\n        const person = persons.find(p => p.id === id)\n        const changedPerson = { ...person, number: newNumber }\n\n        personService\n            .update(id, changedPerson).then(returnedPerson => {\n                setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n\n                setNotificationMessage(\n                    `Changed ${person.name}'s number`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 3000)\n            })\n            .catch(error => {\n                setErrorMessage(\n                    `the person '${person.name}' was already deleted from the server`\n                )\n                setTimeout(() => {\n                    setErrorMessage(null)\n                }, 3000)\n                setPersons(persons.filter(p => p.id !== id))\n            })\n\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        if (persons.some(e => e.name === newName)) {\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const person = persons.find(p => p.name === newName)\n                changeNumber(person.id)\n            }\n        }\n        else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(personObject))\n                    setFilteredPersons(persons)\n\n                    setNotificationMessage(\n                        `Added ${newName}`\n                    )\n                    setNewName('')\n                    setNewNumber('')\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 3000)\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setFilteredPersons(persons.filter(function(el) {\n            return el.name.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1\n        }))\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n\n            <Notification message={notificationMessage} />\n            <Error message={errorMessage} />\n\n            <Filter onChange={handleFilterChange} />\n\n            <h3>Add a new</h3>\n\n            <PersonForm\n                onSubmit={addPerson} newName={newName} onNameChange={handleNameChange}\n                newNumber={newNumber} onNumberChange={handleNumberChange}\n            />\n\n            <h2>Numbers</h2>\n            <ul>\n                {filteredPersons.map((person) =>\n                    <Number key={person.name} name={person.name} number={person.number} id={person.id} />\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}